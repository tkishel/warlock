# Requires credentials for a Wiz Service Account to authenticate to Wiz.
# For your demo use, specify a Wiz Service Account and CI/CD Policies in CSA-Prod.
# Reference: https://docs.wiz.io/wiz-docs/docs/service-accounts-settings
#
# Wiz Service Account permissions: create:security_scans, and update:security_scans (only when using "wizcli docker tag").
# Reference: https://docs.wiz.io/wiz-docs/docs/github-pipeline
#
# Store CLIENT_ID as secrets.WIZ_CLIENT_ID and SECRET as secrets.WIZ_CLIENT_SECRET
# Reference: https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions

name: 'wiz-image-scan'

on:
  pull_request:
    branches:
    - main

jobs:
  wiz-image-scan:
    name: 'WizCLI Image Scan'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      images: ${{ steps.filter.outputs.images }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          images:
            - 'images/**'

  wiz-image-scan-images:
    name: 'WizCLI Image Scan Images'
    needs: wiz-image-scan
    if: ${{ needs.wiz-image-scan.outputs.images == 'true' }}
    env:
      SCAN_PATH: 'images'
      # Optionally modify policies to match your demo use case (Audit or Block).
      # CICD_IAC_POLICIES: 'ShiftLeft-Demo-Audit-Misconfigurations,ShiftLeft-Demo-Audit-Secrets'
      # CICD_IAC_POLICIES: 'ShiftLeft-Demo-Audit-Misconfigurations,ShiftLeft-Demo-Audit-Secrets'
      # CICD_IMG_POLICIES: 'ShiftLeft-Demo-Audit-Misconfigurations,ShiftLeft-Demo-Audit-Secrets'
      CICD_IAC_POLICIES: 'ShiftLeft-Demo-Block-Misconfigurations,ShiftLeft-Demo-Block-Secrets'
      CICD_DIR_POLICIES: 'ShiftLeft-Demo-Block-Secrets,ShiftLeft-Demo-Block-Vulnerabilities'
      CICD_IMG_POLICIES: 'ShiftLeft-Demo-Block-Secrets,ShiftLeft-Demo-Block-Vulnerabilities'
      IMAGE: 'wizard/wiz-example-image'
      TAG: ${{ github.run_number }}
      # Optional. Requires configuration in Docker Hub (or another registry) to demo "wizcli docker tag".
      # https://github.com/marketplace/actions/docker-login
      ENABLE_WIZ_DOCKER_TAG: 'false'

    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      if: ${{ env.ENABLE_WIZ_DOCKER_TAG == 'true' }}
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Download WizCLI
      run: |
        curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli

    - name: Authenticate to Wiz
      run: ./wizcli auth --id "${WIZ_CLIENT_ID}" --secret "${WIZ_CLIENT_SECRET}"
      # Secrets allow you to store sensitive information (credentials) in your organization, repository, or repository environments.
      env:
        WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
        WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

    - name: Build the Docker Image
      run: |
        docker build "${SCAN_PATH}" -t "${IMAGE}:${TAG}"

    - name: Run WizCLI IaC Scan
      run: |
        ./wizcli iac scan --path "${SCAN_PATH}" --policy "${CICD_IAC_POLICIES}" --policy-hits-only --output wiz-iac-scan-results.json,sarif,true
      continue-on-error: true

    - uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: wiz-iac-scan-results.json
      continue-on-error: true
      if: always()

    - name: Run WizCLI Dir Scan
      run: |
        ./wizcli dir scan --path ${SCAN_PATH} --policy "${CICD_DIR_POLICIES}" --policy-hits-only --output wiz-dir-scan-results.json,sarif,true
      continue-on-error: true

    - uses: github/codeql-action/upload-sarif@v2
      with:
        category: directory-scans
        sarif_file: wiz-dir-scan-results.json
      continue-on-error: true
      if: always()

    - name: Run WizCLI (Docker) Image Scan
      run: |
        ./wizcli docker scan --image "${IMAGE}:${TAG}" --dockerfile "${SCAN_PATH}/Dockerfile" --driver mountWithLayers --policy "${CICD_IMG_POLICIES}" --policy-hits-only --output wiz-docker-scan-results.json,sarif,true
      continue-on-error: true

    - uses: github/codeql-action/upload-sarif@v2
      with:
        category: docker-scans
        sarif_file: wiz-docker-scan-results.json
      continue-on-error: true
      if: always()


    - name: Push Docker Image
      if: ${{ env.ENABLE_WIZ_DOCKER_TAG == 'true' }}
      run: |
        docker push "${IMAGE}:${TAG}"

    - name: WizCLI Docker Tag
      if: ${{ env.ENABLE_WIZ_DOCKER_TAG == 'true' }}
      run: |
        docker images list
        docker images --digests
        ./wizcli docker tag --image "${IMAGE}:${TAG}"


