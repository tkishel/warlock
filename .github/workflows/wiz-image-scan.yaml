# See also: https://docs.wiz.io/wiz-docs/docs/github-pipeline
# For personal use, specify a Wiz Service Account and CI/CD Policies in CSA-Prod.

name: 'wizcli'

on: 
  pull_request:
    branches: 
    - main

jobs:
  wiz-image-scan:
    name: 'WizCLI Image Scan'
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    env:
      SCAN_PATH: "../../images"
      # CICD_POLICIES: "SL-Demo-Misconfigurations,SL-Demo-Secrets,SL-Demo-Vulnerabilities"
      CICD_POLICIES: "SL-Demo-Misconfigurations-Block,SL-Demo-Secrets-Block,SL-Demo-Vulnerabilities-Block"
      OUTPUT_FILE: "wiz-image-scan-results.json"
      IMAGE: "wizard/wiz-example-image"
      TAG: ${{ github.run_number }}
      ENABLE_WIZ_DOCKER_TAG: "false"

    steps:
    # This action checks-out your repository, so third-party tools can access it.
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Docker Login
      if: ${{ env.ENABLE_WIZ_DOCKER_TAG == 'true' }}
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.GH_USER }}
        password: ${{ secrets.GH_PASS }}

    - name: Build the Docker Image
      run: docker build "${SCAN_PATH}" -t "${IMAGE}:${TAG}"

    - name: Download WizCLI
      run: curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli

    - name: Authenticate to Wiz
      # Credentials for a Wiz Service Account (CLIENT ID and SECRET) is required to authenticate to Wiz. 
      # Wiz Service Account permissions: create:security_scans, update:security_scans (only when using "wizcli docker tag").
      run: ./wizcli auth --id "${WIZ_CLIENT_ID}" --secret "${WIZ_CLIENT_SECRET}"
      # Secrets allow you to store sensitive information (credentials) in your organization, repository, or repository environments.
      env:
        WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
        WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

    - name: Run WizCLI (Docker) Image Scan
      run: ./wizcli docker scan --image "${IMAGE}:${TAG}" --dockerfile "${SCAN_PATH}/Dockerfile" --policy "${CICD_POLICIES}" --policy-hits-only --output "${OUTPUT_FILE}",sarif,true

    - name: Push Docker Image
      if: ${{ env.ENABLE_WIZ_DOCKER_TAG == 'true' }}
      run: docker push "${IMAGE}:${TAG}"

    - name: WizCLI Docker Tag
      if: ${{ env.ENABLE_WIZ_DOCKER_TAG == 'true' }}
      run: |
        docker images list
        docker images --digests
        ./wizcli docker tag --image "${IMAGE}:${TAG}"

    # This action uploads SARIF files, so you can see code scanning alerts from third-party tools in your repository.
    - uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${OUTPUT_FILE}
      continue-on-error: true
