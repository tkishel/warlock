# See also: https://docs.wiz.io/wiz-docs/docs/github-pipeline
# For personal use, specify a Wiz Service Account and CI/CD Policies in CSA-Prod.

name: 'wiz-iac-scan'

on: 
  pull_request:
    branches: 
    - main

jobs:
  wiz-iac-scan:
    name: 'WizCLI IaC Scan'
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    env:
      SCAN_PATH: "terraform"
      # CICD_POLICIES: "SL-Demo-Secrets,SL-Demo-Vulnerabilities"
      CICD_POLICIES: "SL-Demo-Secrets-Block,SL-Demo-Vulnerabilities-Block"
      OUTPUT_FILE: "wiz-iac-scan-results.json"

    steps:
    # This action checks-out your repository, so third-party tools can access it.
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download WizCLI
      run: curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli

    - name: Authenticate to Wiz
      # Credentials for a Wiz Service Account (CLIENT ID and SECRET) is required to authenticate to Wiz.
      # Wiz Service Account permissions: create:security_scans.
      run: ./wizcli auth --id "${WIZ_CLIENT_ID}" --secret "${WIZ_CLIENT_SECRET}"
      # Secrets allow you to store sensitive information (credentials) in your organization, repository, or repository environments.
      env:
        WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
        WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

    - name: Run WizCLI IaC Scan 
      run: ./wizcli iac scan --path "${SCAN_PATH}" --policy "${CICD_POLICIES}" --policy-hits-only --output "${OUTPUT_FILE}",sarif,true

    # This action uploads SARIF files to your repository, so you can see code scanning alerts from third-party tools.
    - uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${OUTPUT_FILE}
      continue-on-error: true
